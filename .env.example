# Server Configuration
PORT=5000
NODE_ENV=development

# Claude API Configuration
# Get your API key from https://console.anthropic.com/
CLAUDE_API_KEY=your-claude-api-key-here

# API Authentication
# Set API_KEY to enable authentication. Leave empty to disable.
API_KEY=your-secret-api-key

# Logging
LOG_LEVEL=info

# Task Execution
TASK_TIMEOUT_MS=600000  # 10 minutes (default)
MAX_CONCURRENT_TASKS=10
USE_CLAUDE_CODE_SDK=true

# Queue Configuration
QUEUE_CONCURRENCY=2

# Database (SQLite)
DB_PATH=./data/cc-anywhere.db

# Database (for future use)
# DATABASE_URL=postgresql://user:password@localhost:5432/cc_anywhere  # PostgreSQL (future support)

# Redis (for future use with Bull/BullMQ)
REDIS_URL=redis://localhost:6379

# Tunnel Configuration (optional)
# Choose tunnel type: none, ngrok, cloudflare
TUNNEL_TYPE=none

# ngrok settings (when TUNNEL_TYPE=ngrok)
ENABLE_NGROK=false  # Deprecated: use TUNNEL_TYPE=ngrok instead

# Cloudflare Tunnel settings (when TUNNEL_TYPE=cloudflare)
# Option 1: Using existing tunnel token (recommended)
CLOUDFLARE_TUNNEL_TOKEN=
# Option 2: Create new tunnel (requires cloudflared login)
CLOUDFLARE_TUNNEL_NAME=cc-anywhere

# Common tunnel settings
# Set to true to show QR code for mobile access
SHOW_QR_CODE=false

# Git Worktree Configuration
# Enable worktree feature for isolated task execution
ENABLE_WORKTREE=false
# Base directory for worktrees (relative to repository)
WORKTREE_BASE_PATH=.worktrees
# Maximum number of concurrent worktrees
MAX_WORKTREES=5
# Auto cleanup worktrees after completion
WORKTREE_AUTO_CLEANUP=true
# Cleanup delay in milliseconds (5 minutes)
WORKTREE_CLEANUP_DELAY=300000
# Worktree name prefix
WORKTREE_PREFIX=cc-anywhere