# Server Configuration
PORT=5000
HOST=0.0.0.0
NODE_ENV=development

# Claude API Configuration
# Get your API key from https://console.anthropic.com/
CLAUDE_API_KEY=your-claude-api-key-here

# AWS Bedrock Configuration (optional - alternative to API key)
# AWS credentials for Bedrock access
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1  # Only us-east-1 is supported for Claude models

# Execution Mode Configuration
# Force a specific execution mode: api-key or bedrock
# If not set, will auto-detect based on available credentials (API key takes priority)
# FORCE_EXECUTION_MODE=api-key

# API Authentication
# Set API_KEY to enable authentication. Leave empty to disable.
API_KEY=your-secret-api-key

# Logging
LOG_LEVEL=info
LOG_FORMAT=pretty

# CORS Configuration
CORS_ORIGIN=*

# Claude Code SDK Configuration
CLAUDE_CODE_WORKSPACE_DIR=./workspace
CLAUDE_CODE_TIMEOUT=300000
CLAUDE_CODE_MAX_TURNS=10

# Task Execution
TASK_TIMEOUT_MS=1800000  # 30 minutes (default was 10 minutes)
MAX_CONCURRENT_TASKS=10
USE_CLAUDE_CODE_SDK=true

# Queue Configuration
QUEUE_CONCURRENCY=2

# Worker Configuration
# Worker mode: inline (default), standalone, managed
WORKER_MODE=inline
# Number of worker processes (for managed mode)
WORKER_COUNT=1

# Database (SQLite)
DB_PATH=./data/cc-anywhere.db

# Database (for future use)
# DATABASE_URL=postgresql://user:password@localhost:5432/cc_anywhere  # PostgreSQL (future support)

# Redis (for future use with Bull/BullMQ)
REDIS_URL=redis://localhost:6379

# Tunnel Configuration (optional)
# Choose tunnel type: none, ngrok, cloudflare
TUNNEL_TYPE=none

# ngrok settings (when TUNNEL_TYPE=ngrok)
# Note: ngrok support is provided through tunnel manager

# Cloudflare Tunnel settings (when TUNNEL_TYPE=cloudflare)
# Option 1: Using existing tunnel token (recommended)
CLOUDFLARE_TUNNEL_TOKEN=
# Option 2: Create new tunnel (requires cloudflared login)
CLOUDFLARE_TUNNEL_NAME=cc-anywhere

# Common tunnel settings
# Set to true to show QR code for mobile access
SHOW_QR_CODE=false

# Git Worktree Configuration
# Enable worktree feature for isolated task execution
ENABLE_WORKTREE=false
# Base directory for worktrees (relative to repository)
WORKTREE_BASE_PATH=.worktrees
# Maximum number of concurrent worktrees
MAX_WORKTREES=5
# Auto cleanup worktrees after completion
WORKTREE_AUTO_CLEANUP=true
# Cleanup delay in milliseconds (5 minutes)
WORKTREE_CLEANUP_DELAY=300000
# Worktree name prefix
WORKTREE_PREFIX=cc-anywhere
# Default base branch for worktrees (optional - defaults to current branch)
# WORKTREE_DEFAULT_BASE_BRANCH=main

# WebSocket Configuration
# Heartbeat interval in milliseconds (default: 30000 = 30 seconds)
WEBSOCKET_HEARTBEAT_INTERVAL=60000
# Heartbeat timeout in milliseconds (default: 60000 = 1 minute)
WEBSOCKET_HEARTBEAT_TIMEOUT=120000
# Authentication timeout in milliseconds (default: 10000 = 10 seconds)
WEBSOCKET_AUTH_TIMEOUT=30000
# Maximum log buffer size (default: 1000, increased to 10000)
WEBSOCKET_MAX_LOG_BUFFER_SIZE=10000

# QR Code Authentication Configuration
# Enable QR code authentication
QR_AUTH_ENABLED=false
# Authentication token (minimum 5 characters, recommended 32+ for production)
QR_AUTH_TOKEN=
# Session duration in milliseconds (default: 86400000 = 24 hours)
QR_AUTH_SESSION_DURATION=86400000