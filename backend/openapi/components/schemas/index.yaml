# Common Error Response
Error:
  type: object
  properties:
    error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
      required:
        - code
        - message
  required:
    - error

# Task Related Schemas
TaskStatus:
  type: string
  enum: [pending, running, completed, failed, cancelled]

Task:
  type: object
  properties:
    taskId:
      type: string
      format: uuid
    status:
      $ref: '#/TaskStatus'
    instruction:
      type: string
    result:
      type: object
      nullable: true
    error:
      type: object
      nullable: true
      properties:
        message:
          type: string
        code:
          type: string
    createdAt:
      type: string
      format: date-time
    startedAt:
      type: string
      format: date-time
      nullable: true
    completedAt:
      type: string
      format: date-time
      nullable: true
    workingDirectory:
      type: string
      nullable: true
    logs:
      type: array
      items:
        type: string
      nullable: true
    retryMetadata:
      type: object
      nullable: true
    allowedTools:
      type: array
      items:
        type: string
      nullable: true
    continuedFrom:
      type: string
      nullable: true
    sdkSessionId:
      type: string
      nullable: true
  required:
    - taskId
    - status
    - instruction
    - createdAt

CreateTaskRequest:
  type: object
  properties:
    instruction:
      type: string
      minLength: 1
    context:
      type: object
      properties:
        workingDirectory:
          type: string
        files:
          type: array
          items:
            type: string
    options:
      type: object
      properties:
        timeout:
          type: integer
          minimum: 1000
          maximum: 3600000
        async:
          type: boolean
        allowedTools:
          type: array
          items:
            type: string
    continuationOptions:
      type: object
      properties:
        taskId:
          type: string
          format: uuid
  required:
    - instruction

TaskListResponse:
  type: object
  properties:
    tasks:
      type: array
      items:
        $ref: '#/Task'
    total:
      type: integer
    limit:
      type: integer
    offset:
      type: integer
  required:
    - tasks
    - total
    - limit
    - offset

# Repository Related Schemas
FileNode:
  type: object
  properties:
    name:
      type: string
    path:
      type: string
    type:
      type: string
      enum: [file, directory]
    size:
      type: integer
      nullable: true
    mimeType:
      type: string
      nullable: true
    children:
      type: array
      items:
        $ref: '#/FileNode'
      nullable: true
    hasChanges:
      type: boolean
      nullable: true
    changeType:
      type: string
      enum: [added, modified, removed]
      nullable: true
  required:
    - name
    - path
    - type

FileContent:
  type: object
  properties:
    path:
      type: string
    content:
      type: string
    mimeType:
      type: string
    size:
      type: integer
    encoding:
      type: string
  required:
    - path
    - content
    - mimeType

# Batch Task Schemas
BatchTaskRequest:
  type: object
  properties:
    instruction:
      type: string
      minLength: 1
    repositories:
      type: array
      items:
        type: string
      minItems: 1
    options:
      type: object
      properties:
        timeout:
          type: integer
        async:
          type: boolean
    repositoryOptions:
      type: object
      additionalProperties:
        type: object
  required:
    - instruction
    - repositories

BatchTaskResponse:
  type: object
  properties:
    groupId:
      type: string
    tasks:
      type: array
      items:
        type: object
        properties:
          taskId:
            type: string
          repository:
            type: string
          status:
            $ref: '#/TaskStatus'
  required:
    - groupId
    - tasks

# Queue Related Schemas
QueuedTask:
  type: object
  properties:
    taskId:
      type: string
    status:
      $ref: '#/TaskStatus'
    priority:
      type: integer
    retries:
      type: integer
    createdAt:
      type: string
      format: date-time
    request:
      $ref: '#/CreateTaskRequest'

QueueStats:
  type: object
  properties:
    pending:
      type: integer
    running:
      type: integer
    completed:
      type: integer
    failed:
      type: integer
    total:
      type: integer
    concurrency:
      type: integer
    paused:
      type: boolean
  required:
    - pending
    - running
    - completed
    - failed
    - total
    - concurrency
    - paused

# Session Related Schemas
Session:
  type: object
  properties:
    sessionId:
      type: string
    createdAt:
      type: string
      format: date-time
    lastUsedAt:
      type: string
      format: date-time
    metadata:
      type: object
  required:
    - sessionId
    - createdAt

# Settings Related Schemas
Settings:
  type: object
  properties:
    theme:
      type: string
      enum: [light, dark, auto]
    language:
      type: string
    notifications:
      type: boolean
    autoSave:
      type: boolean

# Preset Related Schemas
Preset:
  type: object
  properties:
    id:
      type: string
    name:
      type: string
    instruction:
      type: string
    context:
      type: object
    options:
      type: object
    tags:
      type: array
      items:
        type: string
    createdAt:
      type: string
      format: date-time
    updatedAt:
      type: string
      format: date-time
  required:
    - id
    - name
    - instruction