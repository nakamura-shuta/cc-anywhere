openapi: 3.1.0
info:
  title: CC-Anywhere API
  description: Claude Code SDK HTTP Server API
  version: 0.4.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://api.cc-anywhere.com
    description: Production server

tags:
  - name: tasks
    description: Task management operations
  - name: repositories
    description: Repository explorer operations
  - name: batch
    description: Batch task operations for multiple repositories
  - name: queue
    description: Task queue management operations
  - name: presets
    description: Preset management operations
  - name: system
    description: System health and metrics

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

  schemas:
    $ref: './components/schemas/index.yaml'
  
  parameters:
    $ref: './components/parameters/index.yaml'
  
  responses:
    $ref: './components/responses/index.yaml'

security:
  - ApiKeyAuth: []

paths:
  # Task Management
  /api/tasks:
    $ref: './paths/tasks.yaml#/~1api~1tasks'
  /api/tasks/{taskId}:
    $ref: './paths/tasks.yaml#/~1api~1tasks~1%7BtaskId%7D'
  /api/tasks/{taskId}/logs:
    $ref: './paths/tasks.yaml#/~1api~1tasks~1%7BtaskId%7D~1logs'
  /api/tasks/{taskId}/retry:
    $ref: './paths/tasks.yaml#/~1api~1tasks~1%7BtaskId%7D~1retry'
  /api/tasks/{taskId}/continue:
    $ref: './paths/tasks.yaml#/~1api~1tasks~1%7BtaskId%7D~1continue'
  
  # Repository Explorer
  /api/repositories:
    $ref: './paths/repositories.yaml#/~1api~1repositories'
  /api/repositories/tree:
    $ref: './paths/repositories.yaml#/~1api~1repositories~1tree'
  /api/repositories/file:
    $ref: './paths/repositories.yaml#/~1api~1repositories~1file'
  /api/repositories/watch:
    $ref: './paths/repositories.yaml#/~1api~1repositories~1watch'
  /api/repositories/watched:
    $ref: './paths/repositories.yaml#/~1api~1repositories~1watched'
  
  # Batch Tasks
  /api/batch/tasks:
    $ref: './paths/batch-tasks.yaml#/~1api~1batch~1tasks'
  /api/batch/tasks/{groupId}/status:
    $ref: './paths/batch-tasks.yaml#/~1api~1batch~1tasks~1%7BgroupId%7D~1status'
  
  # Queue Management
  /api/queue/tasks:
    $ref: './paths/queue.yaml#/~1api~1queue~1tasks'
  /api/queue/tasks/{taskId}:
    $ref: './paths/queue.yaml#/~1api~1queue~1tasks~1%7BtaskId%7D'
  /api/queue/stats:
    $ref: './paths/queue.yaml#/~1api~1queue~1stats'
  /api/queue/concurrency:
    $ref: './paths/queue.yaml#/~1api~1queue~1concurrency'
  
  # Presets
  /api/presets:
    $ref: './paths/presets.yaml#/~1api~1presets'
  /api/presets/{id}:
    $ref: './paths/presets.yaml#/~1api~1presets~1%7Bid%7D'
  
  # System
  /api/health:
    $ref: './paths/system.yaml#/~1api~1health'
  /api/metrics:
    $ref: './paths/system.yaml#/~1api~1metrics'