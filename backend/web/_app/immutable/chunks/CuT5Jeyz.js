import{b as e}from"./DC4utYBl.js";import{A as a}from"./vycYFVnX.js";const d={async list(t){const s={};t&&(t.page&&t.limit&&(s.offset=(t.page-1)*t.limit,s.limit=t.limit),t.status&&(s.status=t.status),t.sort&&(s.sort=t.sort),t.order&&(s.order=t.order));const o=await e.get(a.tasks,{params:s}),r=t?.page||1,i=o.limit,c=Math.ceil(o.total/i);return{data:o.tasks.map(n=>({...n,id:n.taskId})),pagination:{page:r,limit:i,total:o.total,totalPages:c}}},async get(t){const s=await e.get(a.task(t));return{...s,id:s.taskId}},async create(t){const s=await e.post(a.tasks,t);return{...s,id:s.taskId}},async cancel(t){try{return e.delete(a.task(t))}catch{return e.post(a.taskCancel(t))}},async getLogs(t){return e.get(a.taskLogs(t))},async streamLogs(t){return e.stream(a.taskLogs(t))},async delete(t){return e.delete(a.task(t))}};export{d as t};
